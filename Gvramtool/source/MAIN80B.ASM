; LIMIT $D7FF
;GVRAM 6000h〜7F3Fh (8000Bytes)
;RPG   D800h〜
;STACK DE00h〜DEFFh
;BUF   DF00h〜FE3Fh (8000Bytes)

; old info
; 0D300h〜 2304bytes lze buffer
; 0DC00h〜0CDFDh stack
; 0DD00h GVRAMTORAM
; 0DD24h RAMTOGVRAM
; 0DD48h SAVE
; 0DDC9h DECORD
; 0DF00h buffer 8000bytes
	ORG 0D800h
	; BASIC CALL ADDRESS
	JP	GVRAMTORAM		; USR($D800) GVRAM(8KB) → RAM BUF
	JP	RAMTOGVRAM		; USR($D803) BUF320x200(8KB) → GVRAM(320x200)
	RET				; USR($D806) なにもしない
	NOP
	NOP
	LD	HL, 0			; POKE$D80A,L:POKE$D80B,H:USR($D809) LZE展開
	JP	DECORD
	JP	SD_USR_LOAD		; USR($D80F, F$) MZ2000_SDバイナリロード

; GVRAMにあるデータをRAMに転送する
; GVRAM to RAM 06000h〜 8000bytes → 0DF00h〜
; GRAPH Iで指定されているページがRAMに転送されます
GVRAMTORAM:
	LD	(RESTORE_STACK1 + 1), SP
	LD	SP, STACK

	; backup port 0E8h
	IN	A, (0E8h)
	LD	(BACKUP_PORT_0E8), A

	; 06000h〜07FFFhをGVRAMに切り替え
	LD	A, 224
	OUT	(0E8h), A

	; 06000h〜8000bytesを0DF00h〜に転送
	LD	HL, 06000h
	LD	DE, 0DF00h
	LD	BC, 8000
	LDIR

	; 06000h〜07FFFhをRAMに戻す
	LD	A, (BACKUP_PORT_0E8)
	OUT	(0E8h), A

	; restore SP
RESTORE_STACK1:
	LD	SP, 0000
	RET

; RAMにあるデータをGVRAMに転送する
; RAM to GVRAM 0DF00h〜 8000bytes → 06000h〜
; RAMからGRAPH Iで指定されているページに転送されます
RAMTOGVRAM:
	LD	(RESTORE_STACK2 + 1), SP
	LD	SP, STACK

	; backup port 0E8h
	IN	A, (0E8h)
	LD	(BACKUP_PORT_0E8), A

	; 06000h〜07FFFhをGVRAMに切り替え
	LD	A, 224
	OUT	(0E8h), A

	; 0DF00h〜8000bytesを06000h〜に転送
	LD	HL, 0DF00h
	LD	DE, 06000h
	LD	BC, 8000
	LDIR

	; 06000h〜07FFFhをRAMに戻す
	LD	A, (BACKUP_PORT_0E8)
	OUT	(0E8h), A

	; restore SP
RESTORE_STACK2:
	LD	SP, 0000
	RET

; デコードする
; HL: lzeデータ + 4
DECORD:
	LD	DE, 0DF00h
	CALL	DECODE_LZE
	RET

BACKUP_PORT_0E8:
	DB	0

INCLUDE "lzdec.mac"
INCLUDE "MZ2000SD.ASM"

	ORG	0DF00h
STACK:

	END	000B1h
